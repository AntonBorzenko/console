import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

apply plugin: 'js'
apply plugin: 'css'
apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-java-application'


buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.eriwen:gradle-css-plugin:[1,)'
        classpath 'com.eriwen:gradle-js-plugin:[1,)'
        classpath 'com.bmuschko:gradle-docker-plugin:3.6.1'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}


configurations {
    runtime
}

dependencies {
    runtime(
            "org.webjars:jquery:[3,)",
            "org.webjars:bootstrap:[4,)",
            "org.webjars:popper.js:[1,)",
            "org.webjars:requirejs:2.1.22",
            "org.webjars:requirejs-text:[2,)",
            "org.webjars:pace:1.0.2",
            "org.webjars:handlebars:4.0.2",
            "org.webjars:d3js:3.5.3"
    )
}

task copyLibs(type: Copy){
    from configurations.runtime.collect {
        it.isDirectory() ? it : zipTree(it)
    }
    into "lib"
}

task createDockerfile(type: Dockerfile, dependsOn: 'copyLibs'){
    destFile = project.file('docker/Dockerfile')
    from 'nginx'
    addFile('src/main/webapp/.', '/usr/share/nginx/html')
    addFile('lib/META-INF/resources/.', '/usr/share/nginx/html')
    addFile('lib/META-INF/resources/webjars/popper.js/1.14.4/', '/usr/share/nginx/html')
}

task buildAppImage(type: DockerBuildImage, dependsOn: 'createDockerfile'){
    inputDir = project.file(".")
    dockerFile = createDockerfile.destFile
    tag = 'console'
}

task buildApp(type: DockerCreateContainer, dependsOn: 'buildAppImage'){
    targetImageId { buildAppImage.getImageId() }
    portBindings = ['80:80']

}

//or
task runApp(type: DockerStartContainer, dependsOn: 'buildApp'){
    targetContainerId { buildApp.getContainerId() }
    doLast {
        println('Please, visit http://localhost/')
    }
}

//task stopApp(type: DockerStopContainer){     //doesn't work yet
//    targetContainerId { buildApp.getContainerId() }
//}


